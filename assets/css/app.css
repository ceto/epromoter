/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */
html {
  line-height: 1.15;
  -webkit-text-size-adjust: 100%; }

body {
  margin: 0; }

h1 {
  font-size: 2em;
  margin: 0.67em 0; }

hr {
  -webkit-box-sizing: content-box;
          box-sizing: content-box;
  height: 0;
  overflow: visible; }

pre {
  font-family: monospace, monospace;
  font-size: 1em; }

a {
  background-color: transparent; }

abbr[title] {
  border-bottom: none;
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted; }

b,
strong {
  font-weight: bolder; }

code,
kbd,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

small {
  font-size: 80%; }

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

img {
  border-style: none; }

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  line-height: 1.15;
  margin: 0; }

button,
input {
  overflow: visible; }

button,
select {
  text-transform: none; }

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button; }

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

fieldset {
  padding: 0.35em 0.75em 0.625em; }

legend {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  color: inherit;
  display: table;
  max-width: 100%;
  padding: 0;
  white-space: normal; }

progress {
  vertical-align: baseline; }

textarea {
  overflow: auto; }

[type="checkbox"],
[type="radio"] {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  padding: 0; }

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

[type="search"] {
  -webkit-appearance: textfield;
  outline-offset: -2px; }

[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit; }

details {
  display: block; }

summary {
  display: list-item; }

template {
  display: none; }

[hidden] {
  display: none; }

html {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  font-size: 14px; }
  @media screen and (min-width: 80em) {
    html {
      font-size: 16px; } }

*,
*::before,
*::after {
  -webkit-box-sizing: inherit;
          box-sizing: inherit; }

body {
  position: relative;
  margin: 0;
  padding: 0;
  color: #fefefe;
  font-family: "Source Sans Pro", sans-serif;
  font-weight: 400;
  line-height: 1.4;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale; }
  body:before {
    content: '';
    display: block;
    position: fixed;
    z-index: -1;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #5c34a6;
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(10%, #5c34a6), color-stop(90%, #46287f));
    background-image: linear-gradient(180deg, #5c34a6 10%, #46287f 90%); }

img {
  display: inline-block;
  vertical-align: middle;
  max-width: 100%;
  height: auto;
  -ms-interpolation-mode: bicubic;
  image-rendering: -webkit-optimize-contrast; }

.screen-reader, .screen-reader-text {
  position: absolute !important;
  clip: rect(1px, 1px, 1px, 1px); }

h1, h2, h3, h4, h5, h6 {
  font-family: "Source Sans Pro", sans-serif;
  font-weight: 600;
  line-height: 1.4; }

h2 {
  font-size: 2rem; }
  @media screen and (min-width: 48em) {
    h2 {
      font-size: 2.5rem; } }

p {
  margin: 0 0 1em; }

a {
  color: inherit; }

.contacts > p {
  position: relative;
  padding-left: 3rem; }
  .contacts > p .icon {
    font-size: 1.666em;
    position: absolute;
    width: 2rem;
    margin-left: -3rem; }
  .contacts > p a {
    text-decoration: none; }

p.attribution a {
  text-decoration: none;
  font-weight: 600; }
  p.attribution a:hover, p.attribution a:focus {
    text-decoration: underline; }

.button {
  display: inline-block;
  margin: 0 0 0.4333rem;
  padding: 0.875em 1.25em 0.75em;
  color: #fefefe;
  background-color: #4ebaeb;
  border-radius: 0.333em;
  text-decoration: none;
  font-weight: 900;
  letter-spacing: 0.05em;
  text-transform: uppercase;
  line-height: 1.2;
  text-align: center;
  font-size: .9375rem;
  border: 2px solid transparent;
  -webkit-box-shadow: 0em 0.5em 0.25em -0.5em rgba(0, 0, 0, 0.75);
          box-shadow: 0em 0.5em 0.25em -0.5em rgba(0, 0, 0, 0.75); }
  .button:hover, .button:focus {
    background-color: #20a8e6;
    color: #fff; }
  .button.hollow {
    background-color: rgba(255, 255, 255, 0.5);
    border-color: #4ebaeb;
    color: #1b1b1b; }
    .button.hollow:hover, .button.hollow:focus {
      background-color: rgba(255, 255, 255, 0.75);
      border-color: #5c34a6;
      color: #4ebaeb; }
  .button.large {
    font-size: 1rem; }

ul.bulletlist {
  list-style: none;
  margin: 0;
  padding: 0;
  list-style: none;
  font-size: 1.125rem;
  font-weight: 900;
  line-height: 1.4; }
  @media screen and (min-width: 48em) {
    ul.bulletlist {
      font-size: 1.4333rem; } }
  ul.bulletlist > li {
    margin: 0;
    padding: 0;
    padding-left: 1.125em;
    position: relative; }
    ul.bulletlist > li:not(:last-child) {
      margin-bottom: .75em; }
    ul.bulletlist > li:before {
      content: '';
      position: absolute;
      left: 0;
      top: .4333em;
      width: .5em;
      height: .5em;
      border-radius: 50%;
      background-color: #4ebaeb; }

.sectitle {
  color: inherit;
  font-weight: 200;
  line-height: 1.2;
  font-size: 3rem;
  margin: 0 0 0; }
  .sectitle span {
    font-weight: 900;
    color: #4ebaeb; }

.pagewrap {
  overflow: hidden;
  margin: 0 auto;
  padding-left: 5%;
  padding-right: 5%;
  padding-top: 4rem;
  padding-bottom: 4rem;
  width: 100%; }
  @media screen and (min-width: 80em) {
    .pagewrap {
      padding-left: calc(50vw - 542px);
      padding-right: calc(50vw - 542px);
      padding-top: 6rem;
      padding-bottom: 6rem; } }
  @media screen and (min-width: 100em) {
    .pagewrap {
      padding-top: 7rem;
      padding-bottom: 7rem; } }
  @media screen and (min-width: 80em) {
    .pagewrap--full {
      padding-left: 5%;
      padding-right: 5%; } }
  .pagewrap.light {
    background-color: #f4f2f8; }

.narrowwrap {
  max-width: 60rem;
  margin-left: auto;
  margin-right: auto; }

.nlswrap {
  background-color: #1b1031; }

.howtowrap, .videowrap {
  margin-top: -2.5rem;
  margin-bottom: -2.5rem;
  -webkit-mask-image: url(../img/wave-top-b.svg), url(../img/wave-bottom.svg), -webkit-gradient(linear, left top, right top, from(#000), to(#000));
  -webkit-mask-image: url(../img/wave-top-b.svg), url(../img/wave-bottom.svg), linear-gradient(90deg, #000, #000);
          mask-image: url(../img/wave-top-b.svg), url(../img/wave-bottom.svg), -webkit-gradient(linear, left top, right top, from(#000), to(#000));
          mask-image: url(../img/wave-top-b.svg), url(../img/wave-bottom.svg), linear-gradient(90deg, #000, #000);
  -webkit-mask-repeat: no-repeat;
          mask-repeat: no-repeat;
  -webkit-mask-size: 160rem auto, 160rem auto, 100% calc(100% - 4.66rem);
          mask-size: 160rem auto, 160rem auto, 100% calc(100% - 4.66rem);
  -webkit-mask-position: center top, center bottom, center 2.333rem;
          mask-position: center top, center bottom, center 2.333rem; }

.videowrap {
  position: relative; }

.askpreziwrap {
  -webkit-mask-image: url(../img/wave-arrowdown.svg), -webkit-gradient(linear, left top, right top, from(#000), to(#000));
  -webkit-mask-image: url(../img/wave-arrowdown.svg), linear-gradient(90deg, #000, #000);
          mask-image: url(../img/wave-arrowdown.svg), -webkit-gradient(linear, left top, right top, from(#000), to(#000));
          mask-image: url(../img/wave-arrowdown.svg), linear-gradient(90deg, #000, #000);
  -webkit-mask-repeat: no-repeat;
          mask-repeat: no-repeat;
  -webkit-mask-size: 160rem auto, 100% calc(100% - 3.5rem);
          mask-size: 160rem auto, 100% calc(100% - 3.5rem);
  -webkit-mask-position: center bottom, center top;
          mask-position: center bottom, center top; }

.siteheader {
  padding-top: 2rem;
  padding-bottom: 2rem;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  position: absolute;
  z-index: 1; }

.sitelogo {
  display: block;
  max-width: calc(6rem + 4.5vw); }

.sitefooter {
  padding-top: calc(2vw + .5rem);
  padding-bottom: calc(2vw + .5rem);
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: center;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  background-color: #1b1031;
  padding-top: .75rem;
  padding-bottom: .75rem; }

.sitefooter .sitelogo {
  max-width: 5rem; }

.mainmenu {
  list-style: none;
  margin: 0 -.75em 0 0;
  padding: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  text-transform: uppercase;
  font-weight: 900;
  color: #1b1b1b; }
  .mainmenu > li {
    white-space: nowrap; }
    .mainmenu > li a {
      display: block;
      padding: .5em .75em;
      text-decoration: none; }

.footermenu {
  list-style: none;
  padding: 0;
  margin: 0 0; }
  .footermenu > li {
    margin: 0;
    padding: 0; }
    .footermenu > li + li {
      margin-top: .5rem; }
    .footermenu > li a {
      text-decoration: none; }

.sociallinks {
  list-style: none;
  padding: 0;
  margin: 0 0;
  text-align: center;
  font-size: 1rem;
  line-height: 1; }
  @media screen and (min-width: 48em) {
    .sociallinks {
      text-align: left; } }
  @media screen and (min-width: 64em) {
    .sociallinks {
      text-align: right; } }
  .sociallinks > li {
    margin: 0;
    padding: 0;
    display: inline-block; }
    .sociallinks > li a {
      display: inline-block;
      padding: 10.666% 0 0;
      margin: 0 .333em;
      border: 1px solid currentcolor;
      border-radius: 50%;
      width: 2.125em;
      height: 2.125em;
      text-decoration: none;
      text-align: center; }

.herowrap.pagewrap {
  position: relative; }
  .herowrap.pagewrap:before {
    content: '';
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(20%, rgba(255, 255, 255, 0.05333)), to(transparent));
    background-image: linear-gradient(180deg, rgba(255, 255, 255, 0.05333) 20%, transparent 100%);
    display: block;
    position: absolute;
    z-index: -1;
    left: 0;
    bottom: 0;
    width: 100%;
    height: 25rem;
    -webkit-mask-image: url(../img/wave-heroback.svg);
            mask-image: url(../img/wave-heroback.svg);
    -webkit-mask-repeat: no-repeat;
            mask-repeat: no-repeat;
    -webkit-mask-size: 160rem auto;
            mask-size: 160rem auto;
    -webkit-mask-position: center top;
            mask-position: center top; }

.hero {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  min-height: 42rem; }
  @media screen and (min-width: 48em) {
    .hero {
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
      -webkit-flex-direction: row;
          -ms-flex-direction: row;
              flex-direction: row;
      -webkit-box-align: center;
      -webkit-align-items: center;
          -ms-flex-align: center;
              align-items: center;
      height: 30vw;
      min-height: 34rem; } }

.hero__fig {
  -webkit-flex-basis: 100%;
      -ms-flex-preferred-size: 100%;
          flex-basis: 100%;
  margin: 0 0;
  text-align: center; }
  @media screen and (min-width: 48em) {
    .hero__fig {
      -webkit-box-ordinal-group: 3;
      -webkit-order: 2;
          -ms-flex-order: 2;
              order: 2;
      max-width: 50%; } }
  .hero__fig img {
    width: 30rem; }
    @media screen and (min-width: 48em) {
      .hero__fig img {
        max-width: none;
        width: calc(35rem + 7vw); } }

.hero__content {
  -webkit-flex-basis: 100%;
      -ms-flex-preferred-size: 100%;
          flex-basis: 100%;
  margin: calc(2vw + .5rem) 0; }

.hero__title {
  font-size: calc(2.5rem + 1.5vw);
  font-weight: 900;
  line-height: 1.2;
  margin: 0; }
  .hero__title:after {
    content: '';
    display: block;
    width: 100%;
    height: .0875em;
    max-width: 2em;
    background-color: currentColor;
    margin: .125em 0 .25em; }

.hero__lead {
  font-size: calc(1.5rem + .5vw);
  font-weight: 900;
  line-height: 1.2;
  margin: 0; }

.chatwrap {
  background-color: #fff;
  color: #1b1b1b;
  padding-top: 17rem;
  margin-top: -20rem;
  -webkit-mask-image: url(../img/wave-herofront.svg), -webkit-gradient(linear, left top, right top, from(#000), to(#000));
  -webkit-mask-image: url(../img/wave-herofront.svg), linear-gradient(90deg, #000, #000);
          mask-image: url(../img/wave-herofront.svg), -webkit-gradient(linear, left top, right top, from(#000), to(#000));
          mask-image: url(../img/wave-herofront.svg), linear-gradient(90deg, #000, #000);
  -webkit-mask-repeat: no-repeat;
          mask-repeat: no-repeat;
  -webkit-mask-size: 160rem auto, 100% 100%;
          mask-size: 160rem auto, 100% 100%;
  -webkit-mask-position: center top, center 20rem;
          mask-position: center top, center 20rem; }

.chatlist {
  list-style: none;
  margin: 0 auto;
  font-size: 1.125rem;
  padding: 0; }
  @media screen and (min-width: 48em) {
    .chatlist {
      font-size: 1.5666rem; } }
  .chatlist > li {
    margin: 0;
    padding: 0;
    display: -webkit-box;
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex; }
    .chatlist > li:not(:last-child) {
      margin-bottom: 1.25em; }
    .chatlist > li.var {
      -webkit-box-pack: end;
      -webkit-justify-content: flex-end;
          -ms-flex-pack: end;
              justify-content: flex-end; }

.chatcard {
  position: relative;
  background-color: #5c34a6;
  color: #fefefe;
  max-width: 27em;
  margin: 0 2.5em;
  border-radius: .5rem 1rem 1rem 1rem;
  padding: .75em .875em; }
  .chatcard:before {
    content: '';
    position: absolute;
    top: -1em;
    left: -2.5em;
    width: 2em;
    height: 2.5em;
    background-repeat: no-repeat;
    background-position: center;
    background-size: 100% auto;
    background-image: url(../img/chatbubi-a.svg); }
  .var .chatcard {
    border-radius: 1rem .5rem 1rem 1rem;
    background-color: #dbdadf;
    color: #1b1b1b; }
    .var .chatcard:before {
      left: auto;
      right: -2.5em;
      background-image: url(../img/chatbubi-b.svg); }
  .chatcard p {
    font-weight: 600;
    line-height: 1.4;
    margin: 0 0 .125em; }
  .chatcard .button {
    margin-top: 1em; }
  .chatcard > *:last-child() {
    margin-bottom: 0; }

.howtowrap {
  background-color: #fefefe;
  color: #1b1b1b; }

.askpreziwrap {
  background-color: #fefefe;
  color: #1b1b1b; }

.details {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -webkit-flex-direction: column;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center; }
  @media screen and (min-width: 48em) {
    .details {
      -webkit-box-orient: horizontal;
      -webkit-box-direction: normal;
      -webkit-flex-direction: row;
          -ms-flex-direction: row;
              flex-direction: row;
      -webkit-flex-wrap: wrap;
          -ms-flex-wrap: wrap;
              flex-wrap: wrap;
      -webkit-box-align: center;
      -webkit-align-items: center;
          -ms-flex-align: center;
              align-items: center; } }

.details__head {
  -webkit-flex-basis: 100%;
      -ms-flex-preferred-size: 100%;
          flex-basis: 100%;
  text-align: center;
  margin-bottom: calc(2vw + .75rem); }
  .details__head p {
    font-size: 1.5rem;
    font-weight: 900;
    margin: 0; }

.details__ill {
  -webkit-flex-basis: 50%;
      -ms-flex-preferred-size: 50%;
          flex-basis: 50%;
  margin: 0 0;
  text-align: center; }
  .details__ill img {
    width: 35rem; }
    @media screen and (min-width: 48em) {
      .details__ill img {
        max-width: 100%; } }

.details__content {
  -webkit-flex-basis: 50%;
      -ms-flex-preferred-size: 50%;
          flex-basis: 50%; }
  .details__content.big {
    -webkit-flex-basis: 100%;
        -ms-flex-preferred-size: 100%;
            flex-basis: 100%; }
  .details__content.bigger {
    -webkit-flex-basis: 55%;
        -ms-flex-preferred-size: 55%;
            flex-basis: 55%; }
  .details__content.small {
    -webkit-flex-basis: 38%;
        -ms-flex-preferred-size: 38%;
            flex-basis: 38%; }

.details__foot {
  -webkit-flex-basis: 100%;
      -ms-flex-preferred-size: 100%;
          flex-basis: 100%;
  text-align: center;
  margin-top: calc(3vw + 1rem); }
  .details__foot p {
    font-size: 2rem;
    color: #5c34a6;
    font-weight: 900;
    margin: 0 auto;
    max-width: 17em;
    line-height: 1.2; }

.featurewrap {
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(10%, rgba(255, 255, 255, 0.05333)), color-stop(90%, transparent));
  background-image: linear-gradient(180deg, rgba(255, 255, 255, 0.05333) 10%, transparent 90%);
  padding-top: 28rem;
  margin-top: -24rem;
  -webkit-mask-image: url(../img/wave-harmas.svg), -webkit-gradient(linear, left top, right top, from(#000), to(#000));
  -webkit-mask-image: url(../img/wave-harmas.svg), linear-gradient(90deg, #000, #000);
          mask-image: url(../img/wave-harmas.svg), -webkit-gradient(linear, left top, right top, from(#000), to(#000));
          mask-image: url(../img/wave-harmas.svg), linear-gradient(90deg, #000, #000);
  -webkit-mask-repeat: no-repeat;
          mask-repeat: no-repeat;
  -webkit-mask-size: 160rem auto, 100% 100%;
          mask-size: 160rem auto, 100% 100%;
  -webkit-mask-position: center top, center 28rem;
          mask-position: center top, center 28rem; }

.featurelist {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
      -ms-flex-pack: center;
          justify-content: center;
  list-style: none;
  margin: 0 auto;
  padding: 0; }
  .featurelist > li {
    margin: 0;
    padding: 0;
    -webkit-flex-basis: 20rem;
        -ms-flex-preferred-size: 20rem;
            flex-basis: 20rem;
    -webkit-box-flex: 1;
    -webkit-flex-grow: 1;
        -ms-flex-positive: 1;
            flex-grow: 1; }

.featcard {
  padding: 1.5em 1em;
  text-align: center;
  font-size: 1.25rem; }
  .featcard img {
    width: 10em;
    max-height: 7em;
    margin-bottom: 1em; }
  .featcard p {
    font-size: 1.25em;
    font-weight: 200;
    line-height: 1.2; }
    .featcard p strong {
      font-size: 150%;
      font-weight: 900; }

.contactform {
  margin: 0 auto; }

[type="color"],
[type="date"],
[type="datetime-local"],
[type="datetime"],
[type="email"],
[type="month"],
[type="number"],
[type="password"],
[type="search"],
[type="tel"],
[type="text"],
[type="time"],
[type="url"],
[type="week"],
textarea {
  margin: 0;
  padding: .75em .5em;
  display: block;
  width: 100%;
  font-weight: 600;
  line-height: 1.2;
  background-color: rgba(255, 255, 255, 0.25);
  -webkit-appearance: none;
     -moz-appearance: none;
          appearance: none;
  border-radius: 4px;
  border: 1px solid rgba(0, 0, 0, 0.333);
  color: #fff; }
  [type="color"]:focus,
  [type="date"]:focus,
  [type="datetime-local"]:focus,
  [type="datetime"]:focus,
  [type="email"]:focus,
  [type="month"]:focus,
  [type="number"]:focus,
  [type="password"]:focus,
  [type="search"]:focus,
  [type="tel"]:focus,
  [type="text"]:focus,
  [type="time"]:focus,
  [type="url"]:focus,
  [type="week"]:focus,
  textarea:focus {
    border: 1px solid rgba(255, 255, 255, 0.25);
    outline: none; }
    [type="color"]:focus:-ms-input-placeholder,
    [type="date"]:focus:-ms-input-placeholder,
    [type="datetime-local"]:focus:-ms-input-placeholder,
    [type="datetime"]:focus:-ms-input-placeholder,
    [type="email"]:focus:-ms-input-placeholder,
    [type="month"]:focus:-ms-input-placeholder,
    [type="number"]:focus:-ms-input-placeholder,
    [type="password"]:focus:-ms-input-placeholder,
    [type="search"]:focus:-ms-input-placeholder,
    [type="tel"]:focus:-ms-input-placeholder,
    [type="text"]:focus:-ms-input-placeholder,
    [type="time"]:focus:-ms-input-placeholder,
    [type="url"]:focus:-ms-input-placeholder,
    [type="week"]:focus:-ms-input-placeholder,
    textarea:focus:-ms-input-placeholder {
      color: transparent; }
    [type="color"]:focus::-webkit-input-placeholder,
    [type="date"]:focus::-webkit-input-placeholder,
    [type="datetime-local"]:focus::-webkit-input-placeholder,
    [type="datetime"]:focus::-webkit-input-placeholder,
    [type="email"]:focus::-webkit-input-placeholder,
    [type="month"]:focus::-webkit-input-placeholder,
    [type="number"]:focus::-webkit-input-placeholder,
    [type="password"]:focus::-webkit-input-placeholder,
    [type="search"]:focus::-webkit-input-placeholder,
    [type="tel"]:focus::-webkit-input-placeholder,
    [type="text"]:focus::-webkit-input-placeholder,
    [type="time"]:focus::-webkit-input-placeholder,
    [type="url"]:focus::-webkit-input-placeholder,
    [type="week"]:focus::-webkit-input-placeholder,
    textarea:focus::-webkit-input-placeholder {
      color: transparent; }
    [type="color"]:focus::-ms-input-placeholder,
    [type="date"]:focus::-ms-input-placeholder,
    [type="datetime-local"]:focus::-ms-input-placeholder,
    [type="datetime"]:focus::-ms-input-placeholder,
    [type="email"]:focus::-ms-input-placeholder,
    [type="month"]:focus::-ms-input-placeholder,
    [type="number"]:focus::-ms-input-placeholder,
    [type="password"]:focus::-ms-input-placeholder,
    [type="search"]:focus::-ms-input-placeholder,
    [type="tel"]:focus::-ms-input-placeholder,
    [type="text"]:focus::-ms-input-placeholder,
    [type="time"]:focus::-ms-input-placeholder,
    [type="url"]:focus::-ms-input-placeholder,
    [type="week"]:focus::-ms-input-placeholder,
    textarea:focus::-ms-input-placeholder {
      color: transparent; }
    [type="color"]:focus::placeholder,
    [type="date"]:focus::placeholder,
    [type="datetime-local"]:focus::placeholder,
    [type="datetime"]:focus::placeholder,
    [type="email"]:focus::placeholder,
    [type="month"]:focus::placeholder,
    [type="number"]:focus::placeholder,
    [type="password"]:focus::placeholder,
    [type="search"]:focus::placeholder,
    [type="tel"]:focus::placeholder,
    [type="text"]:focus::placeholder,
    [type="time"]:focus::placeholder,
    [type="url"]:focus::placeholder,
    [type="week"]:focus::placeholder,
    textarea:focus::placeholder {
      color: transparent; }

:-ms-input-placeholder {
  color: #f4f2f8;
  font-weight: 900; }

::-webkit-input-placeholder {
  color: #f4f2f8;
  font-weight: 900; }

::-ms-input-placeholder {
  color: #f4f2f8;
  font-weight: 900; }

::placeholder {
  color: #f4f2f8;
  font-weight: 900; }

fieldset {
  margin: 0.71429rem 0; }

legend {
  font-weight: bold;
  font-size: 1rem;
  margin: 0 0 0; }

label {
  font-weight: 900;
  text-transform: uppercase;
  font-size: 1.125rem;
  color: inherit;
  line-height: 1.6; }

[type="checkbox"] + span, [type="radio"] + span {
  text-transform: none;
  font-weight: 400;
  font-size: .9375em;
  line-height: 1.2;
  display: block;
  margin-bottom: 0; }

[type="checkbox"] {
  position: absolute;
  opacity: 0; }
  [type="checkbox"] + span:before {
    content: '';
    display: inline-block;
    float: left;
    margin-right: .5em;
    width: 1.2em;
    height: 1.2em;
    background-color: rgba(255, 255, 255, 0.25);
    border-radius: 4px;
    border: 1px solid rgba(0, 0, 0, 0.333);
    color: #fff; }
  [type="checkbox"]:focus + span:before {
    border: 1px solid rgba(255, 255, 255, 0.25); }
  [type="checkbox"]:checked + span:before {
    background-image: url(../img/checkmark.svg);
    background-repeat: no-repeat;
    background-size: 66.666% auto;
    background-position: center; }

.smartlabel__text {
  display: none; }

.abide-formerror {
  text-align: center;
  font-size: 1.25rem;
  font-weight: 600;
  max-width: 20rem;
  margin: 0 auto .5em;
  padding: .125em .5em;
  border: 1px solid #4ebaeb; }

.form-error {
  font-weight: 400;
  text-transform: none;
  font-size: .9375rem;
  display: none;
  position: absolute; }
  .form-error.is-visible {
    display: inline; }

@media screen and (min-width: 64em) {
  .formleft {
    width: 48.5%;
    float: left; } }

@media screen and (min-width: 64em) {
  .formright {
    width: 48.5%;
    float: right; } }

@media screen and (min-width: 64em) {
  .formfull {
    clear: both;
    width: 50%;
    margin: 0 auto; } }

.formfull .button {
  display: block;
  margin: 0 auto; }

.formsteps {
  list-style: none;
  margin: 0;
  padding: 0; }

.formstep {
  display: block;
  margin: 0 0;
  padding: 1.05rem 0; }

.formstep__title {
  font-size: 1.333rem;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  margin: 0 0 0.75rem; }

.checkergrid {
  list-style: none;
  margin: 0 -0.25rem;
  padding: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }
  .checkergrid > li {
    display: inline-block;
    margin: 0.25rem 0.25rem;
    padding: 0;
    -webkit-flex-basis: 8rem;
        -ms-flex-preferred-size: 8rem;
            flex-basis: 8rem;
    -webkit-box-flex: 1;
    -webkit-flex-grow: 1;
        -ms-flex-positive: 1;
            flex-grow: 1; }

.inputgrid {
  list-style: none;
  margin: 0 -0.25rem;
  padding: 0;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }
  .inputgrid > li {
    display: inline-block;
    margin: 0.25rem 0.25rem;
    padding: 0;
    -webkit-flex-basis: 12rem;
        -ms-flex-preferred-size: 12rem;
            flex-basis: 12rem;
    -webkit-box-flex: 1;
    -webkit-flex-grow: 1;
        -ms-flex-positive: 1;
            flex-grow: 1; }

/**
 * Foundation for Sites
 * Version 6.6.3
 * https://get.foundation
 * Licensed under MIT Open Source
 */
.responsive-embed,
.flex-video {
  position: relative;
  height: 0;
  margin-bottom: 1rem;
  padding-bottom: 75%;
  overflow: hidden; }
  .responsive-embed iframe,
  .responsive-embed object,
  .responsive-embed embed,
  .responsive-embed video,
  .flex-video iframe,
  .flex-video object,
  .flex-video embed,
  .flex-video video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%; }
  .responsive-embed.widescreen,
  .flex-video.widescreen {
    padding-bottom: 56.25%; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
